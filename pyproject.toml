[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ocr-document-converter"
version = "3.1.0"
authors = [
    {name = "Beau Lewis", email = "blewisxx@gmail.com"},
]
description = "Enterprise-grade OCR and document conversion tool with dual OCR engines and VB6/VFP9 legacy integration"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "Topic :: Text Processing :: General",
    "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera",
    "Topic :: Office/Business",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = ["ocr", "document", "conversion", "pdf", "tesseract", "easyocr"]

[project.urls]
Homepage = "https://github.com/Beaulewis1977/quick_ocr_doc_converter"
Documentation = "https://github.com/Beaulewis1977/quick_ocr_doc_converter/blob/main/OCR_README.md"
Repository = "https://github.com/Beaulewis1977/quick_ocr_doc_converter"
Issues = "https://github.com/Beaulewis1977/quick_ocr_doc_converter/issues"

[project.scripts]
ocr-convert = "cli_ocr:main"
doc-convert = "cli:main"

[project.gui-scripts]
ocr-document-converter = "universal_document_converter_ocr:main"

# Tool configurations for CI/CD
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | vb6_vfp9_integration
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    "*.egg-info",
    "vb6_vfp9_integration",
]
per-file-ignores = [
    "__init__.py:F401",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "vb6_vfp9_integration/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    ".",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ocr: marks tests as OCR-related",
    "gui: marks tests as GUI-related",
    "legacy: marks tests as legacy integration tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["ocr_engine", "universal_document_converter_ocr"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/vb6_vfp9_integration/*",
    "*/build/*",
    "*/dist/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
show_missing = true
precision = 2
fail_under = 70

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["tests", "vb6_vfp9_integration", "build", "dist"]
skips = ["B101", "B601"]
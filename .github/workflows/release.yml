name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        python test_ocr_integration.py
        python test_converter.py
        python validate_ocr_integration.py

  build-and-release:
    needs: test
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build packages
      run: |
        python build_ocr_packages.py
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: OCR Document Converter ${{ github.ref }}
        body: |
          ## OCR Document Converter Release
          
          ### What's New
          - Dual OCR engines (Tesseract & EasyOCR)
          - Multi-language support (80+ languages)
          - VFP9/VB6 integration support
          - Enhanced GUI with drag-and-drop
          - Batch processing capabilities
          
          ### Download Options
          
          1. **Complete Application Package** - Full GUI application with all features
          2. **32-bit DLL Package** - For VFP9/VB6 integration only
          
          ### Installation
          1. Download the appropriate package
          2. Extract to any folder
          3. Run `install.bat` (Complete package) or integrate DLL (DLL package)
          
          ### Support
          If you find this tool valuable, consider supporting development:
          **Venmo**: @BeauinTulsa
        draft: false
        prerelease: false
    
    - name: Upload Complete Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Universal-Document-Converter-${{ github.ref_name }}-Windows-Complete.zip
        asset_name: Universal-Document-Converter-${{ github.ref_name }}-Windows-Complete.zip
        asset_content_type: application/zip
    
    - name: Upload DLL Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/UniversalConverter32.dll.zip
        asset_name: UniversalConverter32.dll.zip
        asset_content_type: application/zip

  publish-pypi:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/*

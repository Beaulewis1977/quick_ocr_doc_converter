# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# claude mcp severs
.mcp.json
.clude.json

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.Spotlight-V100
.Trashes

# Linux
*~
.nfs*

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# Application specific
converted_documents/
output/
temp/
*.converted.*

# IDE and editor files
.idea/
*.sublime-project
*.sublime-workspace
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json

# OS generated files
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db

.kilocode/
.kilocode/mcp.json

# Added by Task Master AI
# Logs
logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
dev-debug.log
# Dependency directories
node_modules/
# Environment variables
# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
# OS specific
# Task files
tasks.json
tasks/

# Development documentation
*IMPLEMENTATION*.md
*HANDOFF*.md
*SUMMARY.md
*-ocr-weakness.md
*-ocr-report.md
PROJECT_SUMMARY.md
DEVELOPMENT_SUMMARY.md
WINDOWS_INSTALLER_*.md
AI_AGENT_*.md
augment_rules.md
prd.md
forge*.md
kiro_*.md
OCR_ANALYSIS_REPORT.md
OCR_INTEGRATION_COMPLETE.md
docs/*agent*.md
docs/augment*.md

# Development directories
.roo/
.cursor/
.kiro/
.taskmaster/
.roomodes
.windsurfrules
workflow/
dev_docs_backup/

# Development config files
forge.yaml
CLAUDE.md
ENHANCED_TODO.md
IMPLEMENTATION_PLAN.md
OCR_FIXES_SUMMARY.md
config.json
=0.3.0
.env.example

# Test profile files
test_profile.json
ocr_environment.json

# MCP config files
.mcp.json*
claude_global_mcp_config.json

# Build tools
build_tools/

# Dev scripts
fix_*.bat
fix_*.sh
fix_*.js
fix_*.py
setup_vibe_coder_*.bat
setup_vibe_coder_*.sh 

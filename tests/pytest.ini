[tool:pytest]
# pytest configuration for Enhanced OCR System tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    security: marks tests as security tests
    performance: marks tests as performance tests
    cloud: marks tests that require cloud APIs (may be skipped in CI)
    gui: marks tests for GUI components

# Output and logging
addopts = 
    --strict-markers
    --tb=short
    --verbose
    --capture=no
    --durations=10
    --cov=security
    --cov=backends
    --cov=monitoring
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80

# Minimum version requirements
minversion = 6.0

# Test timeout (seconds)
timeout = 300

# Ignore paths
norecursedirs = 
    .git
    .tox
    dist
    build
    htmlcov
    __pycache__

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:tkinter.*

# Log configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution settings
# Uncomment to enable parallel test execution
# addopts = -n auto

# Coverage configuration
[coverage:run]
source = security, backends, monitoring
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: